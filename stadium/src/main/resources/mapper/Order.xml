<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.situ.stadium.dao.OrderDao">

    <resultMap id="orderMap" type="OrderSearchBean">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="name" property="name"/>
        <result column="phone" property="phone"/>
        <result column="co_id" property="coId"/>
        <result column="sp_id" property="spId"/>
        <result column="spa_id" property="spaId"/>
        <result column="sub_time" property="subTime"/>
        <result column="status" property="status"/>
        <result column="start_time" property="startTime"/>
        <result column="start_time" property="startTime"/>
        <result column="payment" property="payment"/>
        <result column="description" property="description"/>

        <!--一对一关联查询-->
        <association column="user_id" property="user" select="com.situ.stadium.dao.UserDao.findById"/>
        <association column="co_id" property="coach" select="com.situ.stadium.dao.CoachDao.findById"/>
        <association column="sp_id" property="sports" select="com.situ.stadium.dao.SportsDao.findById"/>
        <association column="spa_id" property="area" select="com.situ.stadium.dao.AreaDao.findById"/>
    </resultMap>

    <sql id="order">
        select id,
               user_id,
               co_id,
               sp_id,
               spa_id,
               sub_time,
               status,
               start_time,
               end_time,
               payment,
               description
        from advance_order
    </sql>
    <sql id="userOrder">
        select o.id,
               user_id,
               name,
               phone,
               co_id,
               sp_id,
               spa_id,
               sub_time,
               status,
               start_time,
               end_time,
               payment,
               o.description
        from advance_order o
        left join user u
        on u.id = user_id
    </sql>


    <select id="getList" resultMap="orderMap">
        <include refid="userOrder" />
        <where>
            <if test="name != null and name != ''">
                <bind value="'%' + name + '%'" name="n"/>
                and `name` like #{n}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="coId != null">
                and co_id = #{coId}
            </if>
            <if test="spId != null">
                and sp_id = #{spId}
            </if>
            <if test="spaId != null">
                and spa_id = #{spaId}
            </if>
            <if test="phone != null and phone != ''">
                <bind value="'%' + phone + '%'" name="ph"/>
                and phone like #{ph}
            </if>
            <if test="timeFrom != null and timeFrom != '' and timeTo != null and timeTo != ''">
                and ((start_time &gt;= #{timeFrom}
                        and start_time &lt; #{timeTo})
                    or (end_time &gt;= #{timeFrom}
                        and end_time &lt; #{timeTo}))
            </if>
        </where>
    </select>

    <select id="findById" resultMap="orderMap">
        <include refid="order" />
        where id = #{id}
    </select>

    <select id="findByUserId" resultMap="orderMap">
        <include refid="order"/>
        where user_id = #{userId} and `status` = '0'
    </select>

    <select id="findByTime" resultType="Integer">
        select id from advance_order where
        user_id != #{userId} and (
            (start_time &gt;= #{startTime} and start_time &lt;= #{endTime})
            or
            (end_time &gt;= #{startTime} and  end_time &lt;= #{endTime})
            or
            (start_time &lt;= #{startTime} and end_time &gt;= #{endTime})
        )
    </select>

    <insert id="insert">
        insert into advance_order (user_id, co_id, sp_id, spa_id, sub_time, status, start_time, end_time, payment, description)
        values (#{userId},
                #{coId},
                #{spId},
                #{spaId},
                #{subTime},
                #{status},
                #{startTime},
                #{endTime},
                #{payment},
                #{description})
    </insert>

    <update id="update">
        update advance_order
        set user_id     = #{userId},
            co_id       = #{coId},
            sp_id       = #{spId},
            spa_id      = #{spaId},
            sub_time    = #{subTime},
            status      = #{status},
            start_time  = #{startTime},
            end_time    = #{endTime},
            payment     = #{payment},
            description = #{description}
        where id = #{id}
    </update>

    <update id="cancel">
        update advance_order
        set status = '2'
        where id = #{id}
    </update>

    <delete id="deleteByIds">
        delete from advance_order
        where id in
        <foreach collection="ids" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>

</mapper>